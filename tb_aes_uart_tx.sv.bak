`timescale 1ns / 1ps

module tb_aes_uart_tx;

    logic clk, reset, enable;
    logic tx, done;
    logic [127:0] plaintext;
	
	 localparam CLK_PERIOD = 20;  // 50 MHz -> 20 ns
    // Clock 50 MHz
    initial begin
        clk = 0;
        forever #(CLK_PERIOD/2) clk = ~clk;
    end

    // DUT
    aes_uart_tx_top uut (
        .clk(clk),
        .reset(reset),
        .enable(enable),
        .plaintext(plaintext),
        .tx(tx),
        .done(done)
    );

    initial begin
        $display("=== TESTCASE: AES_UART_TX_TOP ===");
        reset = 1;
        enable  = 0;
		  plaintext = 128'h0;
        repeat (5) @(posedge clk);
        reset = 0;
        #(CLK_PERIOD);
        $display("[%0t ns] -> bat dau gui  ciphertext qua UART TX", $time);
        enable  = 1;
		  #(CLK_PERIOD);
        plaintext = 128'hD30216C83D902E5090291C9D378FFC08;
        enable  = 0;
		  repeat (12) @(posedge clk);
		  #(CLK_PERIOD);
        //wait (done);
		  #10000;
        //$display("[%0t ns] -> hoan tat truyen du lieu AES qua UART TX", $time);
        $stop;
    end
	always @(posedge clk) begin
		 if (uut.valid_out)
			  $display("[%0t] AES done-> valid_out = 1, ciphertext = %h", $time, uut.ciphertext);
		 if (uut.uart_start)
			  $display("[%0t] UART start = 1 (start send)", $time);
	end

endmodule
